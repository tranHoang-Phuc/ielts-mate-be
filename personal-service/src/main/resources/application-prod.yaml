spring:
  application:
    name: personal-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
  kafka:
    bootstrap-servers: ${KAFKA_BOOSTRAP_SERVER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: personal-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update


  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${PERSONAL_SERVICE_DB_URL}
    username: ${PERSONAL_SERVICE_USERNAME}
    password: ${PERSONAL_SERVICE_PASSWORD}
    hikari:
      data-source-properties:
        prepareThreshold: 0
  jackson:
    serialization:
      write-dates-as-timestamps: false
    date-format: HH:mm

server:
  port: 8072
  servlet:
    context-path: /personal

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

keycloak:
  base-uri: ${KEYCLOAK_BASE_URI}
  token-uri: ${KEYCLOAK_TOKEN_URI}
  realm: ${KEYCLOAK_REALM}
  client-id: ${KEYCLOAK_CLIENT_ID}
  client-secret: ${KEYCLOAK_SECRET}
  scope: ${KEYCLOAK_SCOPE}
  redirect-uri: ${KEYCLOAK_REDIRECT_URI}

kafka:
  topic:
    streak: streak-topic
    send-notification: send-notification-topic
    reminder: reminder-topic

reminder:
  cron: 0 * * * * *

service:
  reading-service: ${READING_SERVICE}
  listening-service: ${LISTENING_SERVICE}
  identity-service: ${IDENTITY_SERVICE}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE}
