spring:
  application:
    name: personal-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://identity.sep.local/realms/SEP490

  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: personal-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://ep-old-credit-a1p3nce6-pooler.ap-southeast-1.aws.neon.tech:5432/personal-service?sslmode=require&prepareThreshold=0
    username: neondb_owner
    password: npg_ovK4lmXJuTr7
    hikari:
      data-source-properties:
        prepareThreshold: 0


  jackson:
    serialization:
      write-dates-as-timestamps: false
    date-format: HH:mm
server:
  port: 8072
  servlet:
    context-path: /personal
logging:
  level:
    org.hibernate.type.descriptor.sql: trace
    org.hibernate: debug
    com.example.personal.feign: DEBUG
    feign: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

keycloak:
  base-uri: http://identity.sep.local
  token-uri: http://identity.sep.local/realms/SEP490/protocol/openid-connect/token
  realm: SEP490
  client-id: fptu_sep490
  client-secret: LA7hBoWpOK58zJY2hKlPUcgweTTtWiIT
  scope: openid
  redirect-uri: http://identity.sep.local/realms/SEP490/broker/google/endpoint


springdoc:
  paths-to-match: /**
  packages-to-scan: com.fptu.sep490.personalservice.controller
  swagger-ui:
    path: /swagger-ui
    oauth:
      use-pkce-with-authorization-code-grant: true
      client-id: swagger-ui
  oauth-flow:
    authorization-url: http://identity.sep.local/realms/SEP490/protocol/openid-connect/auth
    token-url: http://identity.sep.local/realms/SEP490/protocol/openid-connect/token

kafka:
  topic:
    streak: streak-topic
    send-notification: send-notification-topic
    reminder: reminder-topic
    topic-master: topic-master

reminder:
  cron: 0 * * * * *

service:
  reading-service: http://localhost:9000/reading
  listening-service: http://localhost:8071/listening
  identity-service : http://localhost:8090/identity

openai:
  api:
    key: AIza

